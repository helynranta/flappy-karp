name: build

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'
  VCPKG_NUGET_REPOSITORY: 'https://github.com/lerppana/vcpkg-registry.git'
  VCPKG_KEEP_ENV_VARS: GITHUB_AUTHORIZATION_TOKEN

jobs:
  build:
    name: ${{ matrix.os }}-build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest ]
        include:
          - os: windows-latest
            triplet: x64-windows-prod
            VULKAN_SDK: VulkanSDK
            vulkan_branch: windows
            generator: Ninja
            mono: ''
    env:
      VCPKG_FEATURE_FLAGS: manifests,versions,registries
      VCPKG_MANIFEST_NO_DEFAULT_FEATURES: OFF
      buildDir: ${{ github.workspace }}/b/vcpkg_submod_manifest
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
    steps:
      - uses: actions/checkout@v3
        name: pull sources
        with:
          lfs: true

      - uses: actions/checkout@v3
        name: pull vcpkg
        with:
          repository: 'microsoft/vcpkg'
          ref: '2022.09.27'
          path: 'vcpkg'

      - name: cache vcpkg downloads.
        uses: pat-s/always-upload-cache@v3.0.1
        with:
          path: |
            ${{ github.workspace }}/vcpkg/downloads
          key: ${{ matrix.os }}-vcpkg-downloads

      - uses: lerppana/install_vulkan_sdk@main
          
      - uses: actions/checkout@v2
        name: pull blender
        with:
          repository: 'lerppana/blender_portable'
          path: ${{ github.workspace }}/blender
          ref: ${{ matrix.vulkan_branch }}
          persist-credentials: false
          
      - name: 'install blender'
        shell: 'pwsh'
        working-directory: ${{ github.workspace }}/blender
        run: |
          Install-Module -Name SysAdminsFriends -Force
          dir *.zip | Join-File blender.zip
          Expand-Archive -Path blender.zip -Force -DestinationPath .
          rm *.zip
          $folder=Get-ChildItem -Filter blender-* | Select -Expand Name
          cd "${{ github.workspace }}/blender/$folder"
          Write-Host BLENDER_ROOT: (Get-Location)
          echo "BLENDER_ROOT=$(Get-Location)" >> $GITHUB_ENV
  
      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.os == 'windows-latest' }}
        name: setup msvc command prompt

      - uses: lukka/get-cmake@latest
        name: get latest cmake version

      - uses: lerppana/git-credential-approve@v1
        name: setup credentials for private vcpkg registry
        with:
          personal-access-token: ${{ secrets.PAT }}
          path: 'lerppana/vcpkg-registry'

      - name: bootstrap vcpkg
        run: |
          ${{ github.workspace }}/vcpkg/bootstrap-vcpkg.bat -disableMetrics

      - name: 'setup nuget credentials'
        shell: 'bash'
        run: >
          ${{ matrix.mono }} `./vcpkg/vcpkg fetch nuget | tail -n 1`
          sources add
          -source "https://nuget.pkg.github.com/lerppana/index.json"
          -storepasswordincleartext
          -name "GitHub"
          -username "lerppana"
          -password "${{ secrets.PAT }}"

      - name: 'setup nuget apikey'
        shell: 'bash'
        run: >
          `./vcpkg/vcpkg fetch nuget | tail -n 1`
          setapikey "${{ secrets.PAT }}" -Source "https://nuget.pkg.github.com/lerppana/index.json"

      - name: cmake config
        working-directory: ${{ github.workspace }}
        env:
          GITHUB_AUTHORIZATION_TOKEN: '${{ secrets.PAT }}'
        run: |
          cmake -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=Release -B build -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

      - name: cmake build
        run: cmake --build build

      - name: collect build logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: windows-artifact
          path: |
            ${{ env.buildDir }}/**/*.log
            ${{ github.workspace }}/vcpkg/buildtrees/**/*.log
          retention-days: 2
